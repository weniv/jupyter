name: Build and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install the dependencies
        run: |
          python -m pip install -r requirements.txt
      - name: Build the JupyterLite site
        run: |
          cp README.md content
          jupyter lite build --contents content --output-dir dist
          # dist 디렉토리 구조 확인
          echo "Checking dist directory structure:"
          find dist -name "index.html"
          # 루트 index.html과 lab/index.html 수정 (실제 진입점)
          for f in "dist/index.html" "dist/lab/index.html"; do
            sed -i '/<head>/a \
            <script>\
              function collectPageView() {\
                  const this_page_url = window.location.href;\
                  let session_id = sessionStorage.getItem("session_id");\
                  if (!session_id) {\
                      fetch("https://www.analytics.weniv.co.kr/collect/pageview", {\
                          method: "POST",\
                          headers: {\
                              "Content-Type": "application/json",\
                          },\
                          body: JSON.stringify({ url: this_page_url }),\
                      })\
                          .then((response) => {\
                              if (!response.ok) {\
                                  throw new Error("Network response was not ok");\
                              }\
                              return response.json();\
                          })\
                          .then((data) => {\
                              sessionStorage.setItem("session_id", data.session_id);\
                          })\
                          .catch((error) => console.error("Error:", error));\
                  }\
              }\
              window.addEventListener("load", (e) => {\
                  const lastPage = localStorage.getItem("lastPage");\
                  if (lastPage !== window.location.pathname) {\
                      collectPageView();\
                  }\
                  localStorage.setItem("lastPage", window.location.pathname);\
              });\
              async function collectAnchorClick(event, text) {\
                  event.preventDefault();\
                  const ANCHOR = event.currentTarget;\
                  const session_id = sessionStorage.getItem("session_id");\
                  const source_url = window.location.href;\
                  const target_url = ANCHOR.href;\
                  const target_tar = ANCHOR.target || "_self";\
                  try {\
                      const response = await fetch(`https://www.analytics.weniv.co.kr/collect/anchor-click`, {\
                          method: "POST",\
                          headers: {\
                              "Content-Type": "application/json",\
                              "Session-Id": session_id,\
                          },\
                          body: JSON.stringify({ source_url, target_url, type: text }),\
                      });\
                      if (!response.ok) {\
                          throw new Error("Network response was not ok");\
                      }\
                  } catch (error) {\
                      console.error("Error:", error);\
                  } finally {\
                      window.open(target_url, target_tar);\
                  }\
              }\
              window.addEventListener("load", () => {\
                  document.querySelectorAll("a").forEach((anchor) => {\
                      anchor.addEventListener("click", (event) => collectAnchorClick(event, `교육서비스:${anchor.innerText}`));\
                  });\
              });\
            </script>' "$f"
          done
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
